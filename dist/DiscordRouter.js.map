{"version":3,"sources":["../src/DiscordRouter.js"],"names":["DiscordRouter","routes","discord","dot","reddit","config","__discord","__dot","__reddit","__routes","__commandPrefix","get","parseRoutes","route","boot","key","name","toLowerCase","msg","content","startsWith","isCommand","match","isMentioned","user","channel","sendMessage","author","routeName","split","substring","length","params","mention","e","cmd","suffix","getRoutes"],"mappings":"AAAA;;;;;;;;;;;;;;;;IAIqBA,a;;AAEjB;;;;;;;;;AASA,2BAAaC,MAAb,EAAsBC,OAAtB,EAA+BC,GAA/B,EAAoCC,MAApC,EAA4CC,MAA5C,EAAoD;AAAA;;AAChD;;;;;AAKA,aAAKC,SAAL,GAAiBJ,OAAjB;;AAEA;;;;;AAKA,aAAKK,KAAL,GAAaJ,GAAb;;AAEA;;;;;AAKA,aAAKK,QAAL,GAAgBJ,MAAhB;;AAEA;;;;;AAKA,aAAKK,QAAL,GAAgB,EAAhB;;AAEA;;;;;AAKA,aAAKC,eAAL,GAAuBL,OAAOM,GAAP,CAAW,uBAAX,CAAvB;;AAEA,aAAKC,WAAL,CAAiBX,MAAjB;;AAEA,eAAO,IAAP;AACH;;AAED;;;;;;;;oCAIYA,M,EAAQ;AAAA;;AAChB,gCAAKA,MAAL,EAAa,UAACY,KAAD,EAAW;AACpBA,wBAAQ,IAAIA,KAAJ,CAAU,MAAKP,SAAf,EAA0B,MAAKC,KAA/B,EAAsC,MAAKC,QAA3C,EAAqDM,IAArD,EAAR;AACA,oBAAIC,MAAMF,MAAMG,IAAN,CAAWC,WAAX,EAAV;AACA,sBAAKR,QAAL,CAAcM,GAAd,IAAqBF,KAArB;AACH,aAJD;AAKH;;AAED;;;;;;;oCAIY;AACR,mBAAO,KAAKJ,QAAZ;AACH;;AAED;;;;;;;;kCAKUS,G,EAAK;AACX,mBAASA,IAAIC,OAAJ,CAAYC,UAAZ,CAAwB,KAAKV,eAA7B,CAAT;AACH;;AAED;;;;;;;gDAIyBQ,G,EAAK;AAC1B;AACA,gBAAK,KAAKG,SAAL,CAAeH,GAAf,MAAwB,IAA7B,EAAoC;AAChC,uBAAO,KAAKI,KAAL,CAAWJ,GAAX,CAAP;AACH;;AAED,gBAAKA,IAAIK,WAAJ,CAAiB,KAAKjB,SAAL,CAAekB,IAAhC,CAAL,EAA8C;AAC1CN,oBAAIO,OAAJ,CAAYC,WAAZ,CAAyBR,IAAIS,MAAJ,GAAa,eAAtC;AACH;;AAED,mBAAO,KAAP;AACH;;AAED;;;;;;;8BAIMT,G,EAAK;AACP,gBAAIU,YAAYV,IAAIC,OAAJ,CAAYU,KAAZ,CAAmB,GAAnB,EAA0B,CAA1B,EAA8BC,SAA9B,CAAyC,KAAKpB,eAAL,CAAqBqB,MAA9D,CAAhB;AACA,gBAAIC,SAASd,IAAIC,OAAJ,CAAYW,SAAZ,CAAuBF,UAAUG,MAAV,GAAmB,KAAKrB,eAAL,CAAqBqB,MAAxC,GAAiD,CAAxE,CAAb,CAFO,CAEkF;;AAEzF,gBAAKb,IAAIK,WAAJ,CAAiB,KAAKjB,SAAL,CAAekB,IAAhC,CAAL,EAA8C;AAC1C,oBAAI;AACAI,gCAAYV,IAAIC,OAAJ,CAAYU,KAAZ,CAAmB,GAAnB,EAA0B,CAA1B,CAAZ;AACAG,6BAASd,IAAIC,OAAJ,CAAYW,SAAZ,CACL,KAAKxB,SAAL,CAAekB,IAAf,CAAoBS,OAApB,GAA8BF,MAA9B,GAAuCH,UAAUG,MAAjD,GAA0D,KAAKrB,eAAL,CAAqBqB,MAA/E,GAAwF,CADnF,CAAT;AAGH,iBALD,CAKE,OAAQG,CAAR,EAAY;AAAE;AACZhB,wBAAIO,OAAJ,CAAYC,WAAZ,CAAyB,MAAzB;AACA,2BAAO,KAAP;AACH;AACJ;;AAED,gBAAIS,MAAM,KAAK1B,QAAL,CAAemB,SAAf,CAAV;;AAEA,gBAAKO,GAAL,EAAW;AACPA,oBAAIC,MAAJ,GAAaJ,MAAb;AACAG,oBAAIlC,MAAJ,GAAa,KAAKoC,SAAL,EAAb;AACA,uBAAOF,GAAP;AACH;;AAED,mBAAO,KAAP;AACH;;;;;;kBA/HgBnC,a","file":"DiscordRouter.js","sourcesContent":["'use strict';\n\nimport { each, sortBy } from 'lodash';\n\nexport default class DiscordRouter {\n\n    /**\n     *\n     * @param routes {}\n     * @param discord {Discord.client}\n     * @param dot {Dot}\n     * @param reddit {Snoowrap}\n     * @param config {Config}\n     * @returns {DiscordRouter}\n     */\n    constructor( routes,  discord, dot, reddit, config) {\n        /**\n         *\n         * @type {Discord.client}\n         * @private\n         */\n        this.__discord = discord;\n\n        /**\n         *\n         * @type {Dot}\n         * @private\n         */\n        this.__dot = dot;\n\n        /**\n         *\n         * @type {Snoowrap}\n         * @private\n         */\n        this.__reddit = reddit;\n\n        /**\n         *\n         * @type {{}}\n         * @private\n         */\n        this.__routes = {};\n\n        /**\n         *\n         * @type {string}\n         * @private\n         */\n        this.__commandPrefix = config.get('Discord.commandPrefix');\n\n        this.parseRoutes(routes);\n\n        return this;\n    }\n\n    /**\n     *\n     * @param routes {DiscordCommand}\n     */\n    parseRoutes(routes) {\n        each(routes, (route) => {\n            route = new route(this.__discord, this.__dot, this.__reddit).boot();\n            let key = route.name.toLowerCase();\n            this.__routes[key] = route;\n        });\n    }\n\n    /**\n     *\n     * @returns {{}|*}\n     */\n    getRoutes() {\n        return this.__routes;\n    }\n\n    /**\n     * \n     * @param msg Discord.Message\n     * @returns {boolean}\n     */\n    isCommand(msg) {\n        return ( msg.content.startsWith( this.__commandPrefix ) );\n    }\n\n    /**\n     *\n     * @param msg Discord.Message\n     */\n    checkMessagesForCommand( msg) {\n        //check if message is a command\n        if ( this.isCommand(msg) === true ) {\n            return this.match(msg);\n        }\n\n        if ( msg.isMentioned( this.__discord.user ) ) {\n            msg.channel.sendMessage( msg.author + ', you called?' );\n        }\n\n        return false;\n    }\n\n    /**\n     *\n     * @param msg Discord.Message\n     */\n    match(msg) {\n        let routeName = msg.content.split( ' ' )[ 0 ].substring( this.__commandPrefix.length );\n        let params = msg.content.substring( routeName.length + this.__commandPrefix.length + 1 );//add one for the ! and one for the space\n\n        if ( msg.isMentioned( this.__discord.user ) ) {\n            try {\n                routeName = msg.content.split( ' ' )[ 1 ];\n                params = msg.content.substring(\n                    this.__discord.user.mention().length + routeName.length + this.__commandPrefix.length + 1\n                );\n            } catch ( e ) { //no command\n                msg.channel.sendMessage( 'Yes?' );\n                return false;\n            }\n        }\n\n        let cmd = this.__routes[ routeName ];\n\n        if ( cmd ) {\n            cmd.suffix = params;\n            cmd.routes = this.getRoutes();\n            return cmd;\n        }\n\n        return false;\n    }\n}"]}